package com.digi3studio {	import asset.CardBackgroundImage;	import flash.display.Bitmap;	import flash.display.BitmapData;	import flash.display.Sprite;	import flash.geom.Matrix;	import flash.utils.ByteArray;	/**	 * @author Digi3Studio - Colin Leung	 * compose the background;	 * scale the picture for attachment.	 */	public class PhotoComposition{		private var scale:Number;		private var cardWidth:Number;		private var cardHeight:Number;		private var composition:ByteArray;		private var imgEncoder:IBitmapDataEncoder;		public function PhotoComposition(imgEncoder:IBitmapDataEncoder,scale:Number,cardWidth:int,cardHeight:int) {			this.imgEncoder = imgEncoder;			this.scale = scale;			this.cardWidth = cardWidth;			this.cardHeight= cardHeight;		}		public function composeAsByteArray(mcPreview : Sprite, metaData : Object) : ByteArray {			var mcCapture:Sprite = mcPreview['mc_preview_capture'];			var bursts:Vector.<Bitmap> = new Vector.<Bitmap>();			for(var i:int=0;i<mcCapture.numChildren;i++){				if(mcCapture.getChildAt(i) is Bitmap){					var burst:Bitmap = mcCapture.getChildAt(i) as Bitmap;					if(burst.visible == true){						bursts.push(burst);						burst.alpha = 0;					}				}			}			var bdCard:BitmapData = new BitmapData(this.cardWidth * bursts.length, this.cardHeight, true, 0xFAA600);			var tmx:Matrix = new Matrix();			tmx.scale(scale,scale);						for(var j:int=0;j<bursts.length;j++){				bursts[j].alpha = 1;				bdCard.draw(new CardBackgroundImage(), tmx, null, null, null, true);				bdCard.draw(mcPreview, tmx, null, null, null, true);				tmx.translate(this.cardWidth, 0);			}			metaData['frame_width'] = this.cardWidth;			metaData['frame_height']= this.cardHeight;			metaData['bursts']      = bursts.length;			composition = imgEncoder.encode(bdCard,metaData);			return composition;		}				public function getCompositionByteArray():ByteArray{			return composition;		}	}}